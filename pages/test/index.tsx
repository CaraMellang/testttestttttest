import { isLoginState } from "common/recoil";
import { useRecoilState } from "recoil";
import styled from "@emotion/styled";
import MuiTabs from "@mui/material/Tabs";
import MuiTab from "@mui/material/Tab";
import Box, { BoxProps } from "@mui/material/Box";
import { useRouter } from "next/router";
import React, { SyntheticEvent, useEffect, useState } from "react";
import Head from "next/head";

interface TabPannelProps extends BoxProps {
  children?: React.ReactNode;
  index: string;
  value: string;
}

const curriculumList = [
  { seq: 0, title: "강의1", content: "비디오플레이어1" },
  { seq: 1, title: "강의2ㅋㅋㅋ", content: "비디오플레이어2" },
  { seq: 2, title: "강의3엌ㅋㅋ", content: "비디오플레이어3 ㅋㅋ" },
  { seq: 3, title: "강의4~~", content: "비디오플레이어4" },
];
const noticeList = [
  { seq: 0, title: "제목", content: "내용" },
  { seq: 1, title: "ㅋㅋㅋㅋㅋ", content: "내용ㅋㅋ" },
  { seq: 2, title: "ㅇㅇ엌ㅋㅋ", content: "내용어쩔티비 ㅋㅋ" },
  { seq: 3, title: "나가~~", content: "내용크크루삥뽕" },
];

export default function TestPage() {
  const [isLogin, setLogin] = useRecoilState(isLoginState);
  const [menuValue, setMenuValue] = useState("커리큘럼");
  const [showVideo, setShowVideo] = useState(true);
  const router = useRouter();
  const { query, pathname } = router;

  const handleChange = (
    event: SyntheticEvent<Element, Event>,
    newValue: string
  ) => {
    console.log(newValue);
    setMenuValue(newValue);

    router.push({
      pathname,
      query: {
        ...router.query,
      },
    });
  };

  const onClickTabItem = (seq: number) => {
    router.push({
      pathname,
      query: {
        ...router.query,
        seq: seq,
      },
    });
  };

  useEffect(() => {
    router.push({
      pathname,
      query: {
        ...router.query,
        content: menuValue,
      },
    });
  }, [menuValue]);

  console.log(router.query);

  return (
    <MainSection>
      <Head>
        <title>테스트1좋아요구독</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LeftWrap onClick={() => setLogin(true)}>
        {showVideo || !query.seq ? (
          curriculumList
            .filter((curri) => Number(query.seq) === curri.seq)
            .map((item) => <div key={item.seq}>{item.content}</div>)
        ) : query.content === "test" ? (
          <div>야!!</div>
        ) : (
          noticeList
            .filter((notice) => Number(query.seq) === notice.seq)
            .map((itme) => <div key={itme.seq}>{itme.content}</div>)
        )}
      </LeftWrap>
      <RightWrap>
        <MuiTabs value={menuValue} onChange={handleChange}>
          <MuiTab label="하이" value={"커리큘럼"} />
          <MuiTab label="하이2" value={"공지"} />
        </MuiTabs>
        {/* <TabPanel value="hi">어</TabPanel>
        <TabPanel value="hi2">쩔티비</TabPanel> */}
        <TabPannel value={menuValue} index={"커리큘럼"}>
          {curriculumList.map((curri) => {
            return (
              <Box
                key={curri.seq}
                onClick={() => {
                  onClickTabItem(curri.seq);
                  setShowVideo(true);
                }}
              >
                {curri.title}
              </Box>
            );
          })}
          <Box
            onClick={() => {
              router.push({
                pathname,
                query: {
                  content: "test",
                },
              });
              setShowVideo(false);
            }}
          >
            zz테스트박스
          </Box>
        </TabPannel>
        <TabPannel value={menuValue} index={"공지"}>
          {noticeList.map((notice) => {
            return (
              <Box
                key={notice.seq}
                onClick={() => {
                  onClickTabItem(notice.seq);
                  setShowVideo(false);
                }}
              >
                {notice.title} {notice.seq}
              </Box>
            );
          })}
        </TabPannel>
      </RightWrap>
    </MainSection>
  );
}

const TabPannel = (props: TabPannelProps) => {
  const { children, index, value } = props;
  return <Box hidden={value !== index}>{children}</Box>;
};

const LeftWrap = styled.div`
  width: 50%;
`;
const RightWrap = styled.div`
  width: 50%;
`;

const MainSection = styled.div`
  display: flex;
`;
